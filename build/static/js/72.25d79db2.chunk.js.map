{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","components/CreationModification.js","components/ComponentCard.js","components/CategoryTable/ChecklistButton.js","views/EditData/ChecklistEdit.js","components/ComponentCardV2.js","components/CategoryTable/ChecklistdetailComp.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","title","style","fontSize","created_by","creation_date","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate","ChecklistButton","backToList","ComponentCardV2","color","onClick","console","log","CategoryEdit","useState","checklist","setChecklist","id","useParams","navigate","useNavigate","useEffect","api","post","checklist_id","then","data","groupedChecklist","checklist_title","iso_code_title","questions","map","item","question_title","catch","applyChanges","saveChanges","ChecklistdetailComp","handleInputs","e","target","name","value","pStyle","textAlign","marginRight","oStyle","outline","border","length","question","marginBottom"],"mappings":"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","file":"static/js/72.25d79db2.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n              <span style={{ fontSize: '0.7em' }}> Creation: {details && details.created_by} {details && details.creation_date}</span>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n              <span style={{ fontSize: '0.7em' }}> Modified: {details && details.modified_by} {details && details.modification_date}</span>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Form, FormGroup, Button } from 'reactstrap';\r\nimport ComponentCardV2 from '../ComponentCardV2';\r\n\r\n// import DeleteButton from '../DeleteButton';\r\n\r\n\r\nexport default function ChecklistButton({\r\n  backToList,\r\n}) {\r\n  ChecklistButton.propTypes = {\r\n  \r\n    backToList: PropTypes.func,\r\n  };\r\n  return (\r\n    <Form>\r\n      <FormGroup>\r\n        <ComponentCardV2>\r\n          <Row>\r\n           \r\n            <Col>\r\n              <Button\r\n                color=\"dark\"\r\n                className=\"shadow-none\"\r\n                onClick={() => {\r\n                  backToList();\r\n                  console.log('back to list');\r\n                }}\r\n              >\r\n                Back to List\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </ComponentCardV2>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport '../form-editor/editor.scss';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport ChecklistButton from '../../components/CategoryTable/ChecklistButton';\r\nimport ChecklistdetailComp from '../../components/CategoryTable/ChecklistdetailComp';\r\n\r\n\r\nconst CategoryEdit = () => {\r\n  //All state variables\r\n  const [checklist, setChecklist] = useState();\r\n \r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n \r\n\r\n  // Button Save Apply Back List\r\n  const applyChanges = () => {};\r\n  const saveChanges = () => {\r\n    if (checklist.title !== '') {\r\n      navigate('/Checklist');\r\n    }\r\n  };\r\n  const backToList = () => {\r\n    navigate('/Checklist');\r\n  };\r\n\r\n\r\n\r\n  const handleInputs = (e) => {\r\n    setChecklist({ ...checklist, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Get Category By Id\r\n  const ChecklistById = () => {\r\n    api\r\n      .post('/checklist/getChecklistById', { checklist_id: id })\r\n      .then(({ data: { data } }) => {\r\n\r\n        // Group questions into a single checklist object\r\n        const groupedChecklist = {\r\n          checklist_id: data[0].checklist_id,\r\n          checklist_title: data[0].checklist_title,\r\n          iso_code_title: data[0].iso_code_title,\r\n          questions: data.map(item => ({\r\n            question_title: item.question_title, \r\n            checklist_id: item.checklist_id\r\n          }))\r\n        };\r\n\r\n        setChecklist(groupedChecklist);\r\n      })\r\n      .catch(() => {\r\n        message('Cannot fetch checklist details', 'error');\r\n      });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    ChecklistById();\r\n\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumbs />\r\n      <ToastContainer></ToastContainer>\r\n\r\n      {/* Button */}\r\n      <ChecklistButton\r\n        navigate={navigate}\r\n        applyChanges={applyChanges}\r\n        saveChanges={saveChanges}\r\n        backToList={backToList}\r\n        id={id}\r\n      ></ChecklistButton>\r\n\r\n      {/* More details*/}\r\n      <ChecklistdetailComp\r\n        checklist={checklist}\r\n        handleInputs={handleInputs}\r\n      ></ChecklistdetailComp>\r\n\r\n    </>\r\n  );\r\n};\r\nexport default CategoryEdit;\r\n","import { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst pStyle = {\r\n  textAlign: 'right',\r\n  marginRight: '10px',\r\n};\r\nconst oStyle={\r\noutline:'none',\r\nborder:'none'\r\n};\r\n\r\nconst ComponentCardV2 = ({ children }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CardBody style={pStyle} >\r\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCardV2.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ComponentCardV2;\r\n","import React from 'react';\r\nimport { Row, Col, Form, FormGroup } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport ComponentCard from '../ComponentCard';\r\n\r\nexport default function ChecklistdetailComp({ checklist }) {\r\n  ChecklistdetailComp.propTypes = {\r\n    checklist: PropTypes.object,\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <FormGroup>\r\n        <ComponentCard title=\"Checklist Details\">\r\n          <Row>\r\n            <Col>\r\n              {/* Check if questions exist in the checklist prop */}\r\n              {checklist && checklist.questions && checklist.questions.length > 0 ? (\r\n                checklist.questions.map((question) => (\r\n                  <div key={`${question.checklist_id}-${question.question_title}`} style={{ marginBottom: '10px' }}>\r\n                    <strong>Q:</strong> {question.question_title}\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <p>No questions available for this checklist.</p>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </ComponentCard>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n}\r\n"],"sourceRoot":""}