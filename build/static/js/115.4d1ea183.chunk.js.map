{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","components/CreationModification.js","components/ComponentCard.js","views/detailTable/CustomerDetails.js","constants/creationdatetime.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","title","style","fontSize","created_by","creation_date","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate","CustomerDetails","navigate","useNavigate","useState","moment","content_date","content_type","contentDetails","setContentDetails","applications","setApplications","handleInputs","e","target","name","value","loggedInuser","useContext","AppContext","useEffect","api","get","then","res","data","catch","md","onChange","company_name","application_id","defaultValue","map","app","customer_name","email","pass_word","color","onClick","code","creationdatetime","first_name","company_code","post","insertedDataId","insertId","setTimeout","format"],"mappings":"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","file":"static/js/115.4d1ea183.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n              <span style={{ fontSize: '0.7em' }}> Creation: {details && details.created_by} {details && details.creation_date}</span>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n              <span style={{ fontSize: '0.7em' }}> Modified: {details && details.modified_by} {details && details.modification_date}</span>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport AppContext from '../../context/AppContext';\r\n\r\nconst CustomerDetails = () => {\r\n  //All const variables\r\n  const navigate = useNavigate();\r\n  const [contentDetails, setContentDetails] = useState({\r\n    title: '',\r\n    creation_date: moment(),\r\n    content_date: moment(),\r\n    content_type: '',\r\n  });\r\n  const [applications, setApplications] = useState([]);\r\n  //setting data in customerDetails\r\n  const handleInputs = (e) => {\r\n    setContentDetails({ ...contentDetails, [e.target.name]: e.target.value });\r\n  };\r\n \r\n  const { loggedInuser } = useContext(AppContext);\r\n\r\n\r\nconst getApplications=()=>{\r\n  api.get('/content/getApplication').then((res) => {\r\n    setApplications(res.data.data);}).catch(()=>{})\r\n}\r\n\r\n  //Insert Custmer Data\r\n  const insertCustomerData = (code) => {\r\n    if (contentDetails.company_name !== '') {\r\n      contentDetails.creation_date = creationdatetime;\r\n      contentDetails.created_by = loggedInuser.first_name;\r\n      contentDetails.company_code = code;\r\n\r\n      api\r\n        .post('/contact/insertContact', contentDetails)\r\n        .then((res) => {\r\n          const insertedDataId = res.data.data.insertId;\r\n          message('Customer inserted successfully.', 'success');\r\n          setTimeout(() => {\r\n            navigate(`/CustomerEdit/${insertedDataId}`);\r\n          }, 300);\r\n        })\r\n        .catch(() => {\r\n          message('Network connection error.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields.', 'error');\r\n    }\r\n  };\r\n \r\n  // const generateCode = () => {\r\n  //   api\r\n  //     .post('/isocode/getCodeValue', { type: 'customercode' })\r\n  //     .then((res) => {\r\n  //       insertCustomerData(res.data.data);\r\n  //     })\r\n  //     .catch(() => {\r\n  //       insertCustomerData('');\r\n  //     });\r\n  // };\r\n\r\nuseEffect(()=>{\r\n  getApplications();\r\n},[])\r\n\r\n  return (\r\n    <div>\r\n      <BreadCrumbs />\r\n      <ToastContainer></ToastContainer>\r\n      <Row>\r\n        <Col md=\"6\">\r\n          <ComponentCard title=\"Key Details\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Label>Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={handleInputs}\r\n                      value={contentDetails && contentDetails.company_name}\r\n                      name=\"company_name\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                <Col md=\"12\">\r\n              <FormGroup>\r\n              <Label>Application</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"application_id\"\r\n                onChange={handleInputs}\r\n                value={contentDetails && contentDetails.application_id}\r\n              >\r\n                <option defaultValue=\"selected\" value=\"\">\r\n                  Please Select\r\n                </option>\r\n                {applications &&\r\n                  applications.map((app) => (\r\n                    <option key={app.application_id} value={app.application_id}>\r\n                      {app.customer_name}\r\n                    </option>\r\n                  ))}\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Label>Email</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={handleInputs}\r\n                      value={contentDetails && contentDetails.email}\r\n                      name=\"email\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Label>Password</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={handleInputs}\r\n                      value={contentDetails && contentDetails.pass_word}\r\n                      name=\"pass_word\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Row>\r\n                  <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\r\n                    <Button\r\n                      className=\"shadow-none\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        insertCustomerData();\r\n                   \r\n                      }}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => {\r\n                        navigate(-1);\r\n                      }}\r\n                      type=\"button\"\r\n                      className=\"btn btn-dark shadow-none\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                </Row>\r\n              </FormGroup>\r\n            </Form>\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default CustomerDetails;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n"],"sourceRoot":""}