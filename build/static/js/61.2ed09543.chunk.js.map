{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","components/CreationModification.js","components/ComponentCard.js","views/EditData/CategoryEdit.js","constants/creationdatetime.js","components/ComponentCardV2.js","components/Tender/AttachmentModalV2.js","components/ProjectModal/ViewFileComponentV2.js","components/CategoryTable/CategoryButton.js","components/CategoryTable/ChecklistdetailComp.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","title","style","fontSize","created_by","creation_date","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate","CategoryEdit","useState","categoryDetails","setCategoryDetails","section","setSection","valuelist","setValuelist","attachmentModal","setAttachmentModal","modelType","attachmentData","setDataForAttachment","id","useParams","navigate","useNavigate","useEffect","api","post","category_id","then","res","data","catch","get","editCategoryData","creationdatetime","category_title","applyChanges","saveChanges","deleteCategoryData","backToList","handleInputs","e","target","name","value","xs","md","color","onClick","console","log","moduleId","roomName","altTagData","desc","moment","format","pStyle","textAlign","marginRight","oStyle","outline","border","ComponentCardV2","AttachmentModalV2","quesId","fileTypes","file","setFile","handleValue","setHandleValue","uploaded","setUploaded","isOpen","multiple","handleChange","files","arrayOfObj","Object","entries","map","types","role","width","FormData","forEach","ele","append","onUploadProgress","filedata","Math","round","loaded","total","setTimeout","window","reload","ViewFileComponentV2","updateFile","tableStyle","getFile","setGetFile","getFiles","record_id","sub_category_id","room_name","href","rel","fileId","media_id","prevFiles","filter","CategoryButton","ChecklistdetailComp","checklist","questions","length","question","marginBottom","question_title","checklist_id"],"mappings":"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","file":"static/js/61.2ed09543.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n              <span style={{ fontSize: '0.7em' }}> Creation: {details && details.created_by} {details && details.creation_date}</span>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n              <span style={{ fontSize: '0.7em' }}> Modified: {details && details.modified_by} {details && details.modification_date}</span>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport '../form-editor/editor.scss';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Button, Col, Form, FormGroup, Row } from 'reactstrap';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport CategoryButton from '../../components/CategoryTable/CategoryButton';\r\nimport CategoryDetailComp from '../../components/CategoryTable/ChecklistdetailComp';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport AttachmentModalV2 from '../../components/Tender/AttachmentModalV2';\r\nimport ViewFileComponentV2 from '../../components/ProjectModal/ViewFileComponentV2';\r\n\r\nconst CategoryEdit = () => {\r\n  //All state variables\r\n  const [categoryDetails, setCategoryDetails] = useState();\r\n  const [section, setSection] = useState();\r\n  const [valuelist, setValuelist] = useState();\r\n  const [attachmentModal, setAttachmentModal] = useState(false);\r\n  const [attachmentData, setDataForAttachment] = useState({\r\n    modelType: '',\r\n  });\r\n  //Navigation and Parameter Constants\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const dataForAttachment = () => {\r\n    setDataForAttachment({\r\n      modelType: 'attachment',\r\n    });\r\n    console.log('inside DataForAttachment');\r\n  };\r\n\r\n  // Button Save Apply Back List\r\n  const applyChanges = () => {};\r\n  const saveChanges = () => {\r\n    if (categoryDetails.category_title !== '') {\r\n      navigate('/Category');\r\n    }\r\n  };\r\n  const backToList = () => {\r\n    navigate('/Category');\r\n  };\r\n\r\n  //Api call for getting section dropdown\r\n  const getSection = () => {\r\n    api\r\n      .get('/category/getSectionTitle')\r\n      .then((res) => {\r\n        setSection(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Section not found', 'info');\r\n      });\r\n  };\r\n\r\n  //Api call for getting valuelist dropdown\r\n  const getValuelist = () => {\r\n    api\r\n      .get('/category/get-ValueList')\r\n      .then((res) => {\r\n        setValuelist(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('valuelist not found', 'info');\r\n      });\r\n  };\r\n\r\n  const handleInputs = (e) => {\r\n    setCategoryDetails({ ...categoryDetails, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Get Category By Id\r\n  const CategoryById = () => {\r\n    api\r\n      .post('/category/getCategoryById', { category_id: id })\r\n      .then((res) => {\r\n        setCategoryDetails(res.data.data[0]);\r\n      })\r\n      .catch(() => {\r\n        message('category Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  //Category Edit function\r\n  const editCategoryData = () => {\r\n    categoryDetails.modification_date = creationdatetime;\r\n    if (categoryDetails.category_title !== '') {\r\n      api\r\n        .post('/category/editCategory', categoryDetails)\r\n        .then(() => {\r\n          message('Record editted successfully', 'success');\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields', 'warning');\r\n    }\r\n  };\r\n\r\n  //Delete Category Function\r\n  const deleteCategoryData = () => {\r\n    api\r\n      .post('/category/deleteCategory', { category_id: id })\r\n      .then(() => {\r\n        message('Record deteled successfully', 'success');\r\n      })\r\n      .catch(() => {\r\n        message('Unable to delete record.', 'error');\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    CategoryById();\r\n    getSection();\r\n    getValuelist();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumbs />\r\n      <ToastContainer></ToastContainer>\r\n\r\n      {/* Button */}\r\n      <CategoryButton\r\n        editCategoryData={editCategoryData}\r\n        navigate={navigate}\r\n        applyChanges={applyChanges}\r\n        saveChanges={saveChanges}\r\n        deleteCategoryData={deleteCategoryData}\r\n        backToList={backToList}\r\n        id={id}\r\n      ></CategoryButton>\r\n\r\n      {/* More details*/}\r\n      <CategoryDetailComp\r\n        categoryDetails={categoryDetails}\r\n        handleInputs={handleInputs}\r\n        section={section}\r\n        valuelist={valuelist}\r\n      ></CategoryDetailComp>\r\n\r\n<Form>\r\n        <FormGroup>\r\n          <ComponentCard title=\"Attachments\">\r\n            <Row>\r\n              <Col xs=\"12\" md=\"3\" className=\"mb-3\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    dataForAttachment();\r\n                    setAttachmentModal(true);\r\n                  }}\r\n                >\r\n                  Add\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <AttachmentModalV2\r\n              moduleId={id}\r\n              roomName=\"Category\"\r\n              altTagData=\"Category Data\"\r\n              desc=\"Category Data\"\r\n              modelType={attachmentData.modelType}\r\n              attachmentModal={attachmentModal}\r\n              setAttachmentModal={setAttachmentModal}\r\n            />\r\n            <ViewFileComponentV2 moduleId={id} roomName=\"Category\" />\r\n          </ComponentCard>\r\n        </FormGroup>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\nexport default CategoryEdit;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n","import { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst pStyle = {\r\n  textAlign: 'right',\r\n  marginRight: '10px',\r\n};\r\nconst oStyle={\r\noutline:'none',\r\nborder:'none'\r\n};\r\n\r\nconst ComponentCardV2 = ({ children }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CardBody style={pStyle} >\r\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCardV2.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ComponentCardV2;\r\n","import React, { useState } from 'react';\r\nimport { FormGroup, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { FileUploader } from 'react-drag-drop-files';\r\nimport api from '../../constants/api';\r\nimport message from '../Message';\r\n\r\nconst AttachmentModalV2 = ({ attachmentModal, setAttachmentModal, moduleId, quesId, roomName, fileTypes, altTagData, desc }) => {\r\n\r\n  AttachmentModalV2.propTypes = {\r\n    attachmentModal: PropTypes.bool,\r\n    setAttachmentModal: PropTypes.func,\r\n    moduleId: PropTypes.string,\r\n    quesId: PropTypes.any,\r\n    roomName: PropTypes.string,\r\n    altTagData: PropTypes.string,\r\n    desc: PropTypes.string,\r\n    fileTypes: PropTypes.any,\r\n  };\r\n  \r\n  console.log('Question ID in Modal:', quesId); // Debugging line\r\n\r\n  const [file, setFile] = useState([]);\r\n  const [handleValue, setHandleValue] = useState();\r\n  const [uploaded, setUploaded] = useState(null);\r\n\r\n  const handleChange = (files) => {\r\n    const arrayOfObj = Object.entries(files).map((e) => (e[1]));\r\n\r\n    setFile(files);\r\n    setHandleValue(arrayOfObj);\r\n    console.log(files);\r\n  };\r\n\r\n  const uploadFile = () => {\r\n    if (file) {\r\n      const data = new FormData();\r\n      const arrayOfObj = Object.entries(file).map((e) => (e[1]));\r\n\r\n      arrayOfObj.forEach((ele) => {\r\n        data.append('files', ele);\r\n      });\r\n      data.append('sub_category_id', quesId);\r\n      data.append('record_id', moduleId);\r\n      data.append('room_name', roomName);\r\n      data.append('alt_tag_data', altTagData);\r\n      data.append('description', desc);\r\n\r\n      api.post('/file/uploadFiles', data, {\r\n        onUploadProgress: (filedata) => {\r\n          console.log(Math.round((filedata.loaded / filedata.total) * 100));\r\n          setUploaded(Math.round((filedata.loaded / filedata.total) * 100));\r\n        }\r\n      }).then(() => {\r\n        message('Files Uploaded Successfully', 'success');\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 400);\r\n      }).catch(() => {\r\n        setAttachmentModal(false);\r\n        message('Unable to upload File', 'error');\r\n      });\r\n    } else {\r\n      message('No files selected', 'info');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={attachmentModal}>\r\n        <ModalHeader>Upload Media</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <FileUploader\r\n              multiple\r\n              handleChange={handleChange}\r\n              name=\"file\"\r\n              types={fileTypes}\r\n            />\r\n            {handleValue ? (\r\n              handleValue.map((e) => (\r\n                <div key={e.name}>\r\n                  <span>Name: {e.name}</span>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <span>No file selected</span>\r\n            )}\r\n          </FormGroup>\r\n          {uploaded && (\r\n            <div className=\"progress mt-2\">\r\n              <div className=\"progress-bar h-4\" role=\"progressbar\"\r\n                aria-valuenow={uploaded}\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                style={{ width: `${uploaded}%` }}>\r\n                {`${uploaded}% uploaded`}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" className=\"shadow-none\" onClick={uploadFile}>Upload</Button>\r\n          <Button color=\"secondary\" className=\"shadow-none\" onClick={() => { window.location.reload(); setAttachmentModal(false); }}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttachmentModalV2;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Icon from 'react-feather';\r\nimport message from '../Message';\r\nimport api from '../../constants/api';\r\n\r\nfunction ViewFileComponentV2({ moduleId, quesId,roomName,updateFile}) {\r\n  ViewFileComponentV2.propTypes = {\r\n    moduleId: PropTypes.string,\r\n    quesId: PropTypes.string,\r\n    roomName: PropTypes.string,\r\n    updateFile:PropTypes.bool,\r\n  };\r\n\r\n  const tableStyle = {};\r\n\r\n  const [getFile, setGetFile] = useState(null);\r\n\r\n  const getFiles = () => {\r\n    api\r\n      .post('/file/getListOfFiles', { record_id: moduleId,sub_category_id:quesId, room_name: roomName })\r\n      .then((res) => {\r\n        setGetFile(res.data);\r\n      })\r\n      .catch(() => {\r\n        message('Unable to fetch files', 'info');\r\n      });\r\n  };\r\n\r\n  const deleteFile = (fileId) => {\r\n     \r\n        api\r\n          .post('/file/deleteFile', { media_id: fileId })\r\n          .then(() => {\r\n            setGetFile((prevFiles) => prevFiles.filter((file) => file.media_id !== fileId));\r\n          })\r\n          .catch(() => {\r\n            message('Unable to Delete Media', 'info');\r\n          });\r\n      }\r\n      useEffect(() => {\r\n        getFiles();\r\n      }, [updateFile]); \r\n\r\n  useEffect(() => {\r\n    getFiles();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table style={tableStyle}>\r\n        <thead>\r\n          <tr style={tableStyle}>\r\n            <th style={tableStyle}>\r\n             File Name\r\n            </th>\r\n            <th width=\"5%\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {getFile ? (\r\n          getFile.map((res) => {\r\n            return (\r\n                <tr key={res.media_id}>\r\n                  <td style={tableStyle}>\r\n                      <a\r\n                        href={`https://isodemo.unitdtechnologies.com/storage/uploads/${res.name}`}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                      >\r\n                        {res.name}\r\n                      </a>\r\n                  </td>\r\n                  <td style={tableStyle}>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn shadow-none\"\r\n                      onClick={() => {\r\n                        deleteFile(res.media_id);\r\n                      }}\r\n                    >\r\n                      <Icon.Trash2 />{' '}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n            );\r\n          })\r\n        ) : (\r\n          <tr><td><p>no files uploaded yet</p></td></tr>\r\n        )}\r\n        </tbody>\r\n        \r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewFileComponentV2;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Form, FormGroup, Button } from 'reactstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ComponentCardV2 from '../ComponentCardV2';\r\n\r\n// import DeleteButton from '../DeleteButton';\r\n\r\n\r\nexport default function CategoryButton({\r\n  editCategoryData,\r\n  // navigate,\r\n  applyChanges,\r\n  saveChanges,\r\n  // id,\r\n  backToList,\r\n}) {\r\n  CategoryButton.propTypes = {\r\n    editCategoryData: PropTypes.any,\r\n    // navigate: PropTypes.func,\r\n    applyChanges: PropTypes.func,\r\n    saveChanges: PropTypes.func,\r\n    // id: PropTypes.string,\r\n    backToList: PropTypes.func,\r\n  };\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Form>\r\n      <FormGroup>\r\n        <ComponentCardV2>\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                className=\"shadow-none\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  editCategoryData();\r\n                  saveChanges();\r\n                  setTimeout(() => {\r\n                    navigate('/Category');\r\n                  }, 1100);\r\n                }}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                color=\"primary\"\r\n                className=\"shadow-none\"\r\n                onClick={() => {\r\n                  editCategoryData();\r\n                  applyChanges();\r\n                  console.log('cancel process');\r\n                }}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Col>\r\n            {/* <Col>\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"shadow-none\"\r\n                color=\"dark\"\r\n                onClick={(e) => {\r\n                  if (window.confirm('Are you sure you want to cancel? ')) {\r\n                    navigate('/Category');\r\n                  } else {\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n            <DeleteButton\r\n              id={id} \r\n              columnname=\"category_id\"\r\n              tablename=\"category\"\r\n            ></DeleteButton>\r\n            </Col> */}\r\n            <Col>\r\n              <Button\r\n                color=\"dark\"\r\n                className=\"shadow-none\"\r\n                onClick={() => {\r\n                  backToList();\r\n                  console.log('back to list');\r\n                }}\r\n              >\r\n                Back to List\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </ComponentCardV2>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Form, FormGroup } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport ComponentCard from '../ComponentCard';\r\n\r\nexport default function ChecklistdetailComp({ checklist }) {\r\n  ChecklistdetailComp.propTypes = {\r\n    checklist: PropTypes.object,\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <FormGroup>\r\n        <ComponentCard title=\"Checklist Details\">\r\n          <Row>\r\n            <Col>\r\n              {/* Check if questions exist in the checklist prop */}\r\n              {checklist && checklist.questions && checklist.questions.length > 0 ? (\r\n                checklist.questions.map((question) => (\r\n                  <div key={`${question.checklist_id}-${question.question_title}`} style={{ marginBottom: '10px' }}>\r\n                    <strong>Q:</strong> {question.question_title}\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <p>No questions available for this checklist.</p>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </ComponentCard>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n}\r\n"],"sourceRoot":""}