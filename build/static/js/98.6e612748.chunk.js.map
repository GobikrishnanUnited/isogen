{"version":3,"sources":["views/smartconTables/Checklist.js","layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","components/LottieComponent.js","components/CommonTable.js","../node_modules/react-feather/dist/icons/edit-2.js"],"names":["Checklist","useState","checklistData","setChecklistData","useEffect","api","get","then","res","checklists","data","catch","message","className","title","Button","to","color","style","width","length","colSpan","map","checklist","index","checklist_id","size","checklist_title","margin","fontSize","question_count","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","tag","Link","active","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","LottieComponent","defaultOptions","loop","autoplay","renderer","animationData","rendererSettings","preserveAspectRatio","options","height","CommonTable","props","subtitle","justifyContent","xl","sm","loading","id","additionalClasses","striped","responsive","borderless","children","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Edit2","forwardRef","_ref","ref","_ref$color","_ref$size","rest","React","createElement","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","propTypes","PropTypes","string","oneOfType","number","displayName"],"mappings":"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","file":"static/js/98.6e612748.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport * as Icon from 'react-feather';\r\nimport { Link } from 'react-router-dom';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport CommonTable from '../../components/CommonTable';\r\n\r\nconst Checklist = () => {\r\n  // State to store checklists with question count\r\n  const [checklistData, setChecklistData] = useState([]);\r\n\r\n  // Function to get checklist data from the API\r\n  const getChecklist = () => {\r\n    api\r\n      .get('/checklist/getChecklist')\r\n      .then((res) => {\r\n        const checklists = res.data.data; // API response with checklists\r\n\r\n        // Set the checklist data\r\n        setChecklistData(checklists);\r\n      })\r\n      .catch(() => {\r\n        message('Cannot get Content Data', 'error');\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChecklist();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"MainDiv pt-xs-25\">\r\n      <BreadCrumbs />\r\n      <CommonTable\r\n        title=\"Check List\"\r\n        Button={\r\n          <Link to=\"/ChecklistDetails\">\r\n            <Button color=\"primary\" className=\"shadow-none\">\r\n              Add New\r\n            </Button>\r\n          </Link>\r\n        }\r\n      >\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: '5%' }}>S.No</th> {/* Narrow the width for serial number */}\r\n              <th style={{ width: '5%' }}>Edit</th> {/* Narrow the width for the edit button */}\r\n              <th>Checklist Title</th> {/* Keep title width flexible */}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {checklistData.length === 0 ? (\r\n              <tr>\r\n                <td colSpan=\"3\">No checklists available</td>\r\n              </tr>\r\n            ) : (\r\n              checklistData.map((checklist, index) => (\r\n                <tr key={checklist.checklist_id}>\r\n                  <td>{index + 1}</td> {/* Serial number */}\r\n                  <td>\r\n                    <Link to={`/ChecklistEdit/${checklist.checklist_id}`}>\r\n                      <Icon.Edit2 size={16} /> {/* Smaller edit icon */}\r\n                    </Link>\r\n                  </td>\r\n                  <td>\r\n                    <strong>{checklist.checklist_title}</strong> {/* Checklist title */}\r\n                    <p style={{ margin: '0', fontSize: '0.9rem', color: '#555' }}>\r\n                      {checklist.question_count} questions {/* Question count underneath */}\r\n                    </p>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </CommonTable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checklist;\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport Lottie from 'react-lottie';\r\nimport animationData from './pencil.json';\r\n/* eslint-disable */\r\nconst LottieComponent = () => {\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    renderer: 'svg',\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: 'xMidYMid slice'\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Lottie options={defaultOptions} height={100} width={100} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LottieComponent;\r\n","\r\nimport { Card, CardBody, CardTitle, CardSubtitle, Table, Col, Row } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport LottieComponent from './LottieComponent'\r\n\r\nconst CommonTable = (props) => {\r\n    CommonTable.propTypes = {\r\n        children: PropTypes.node,\r\n        title: PropTypes.any,\r\n        subtitle: PropTypes.any,\r\n        Button:PropTypes.node,\r\n        additionalClasses:PropTypes.string,\r\n        loading:PropTypes.bool\r\n      };\r\n  return (\r\n     <div>\r\n    <Card>\r\n      <CardBody>\r\n        <Row className=\"mb-2 title_border\">\r\n          <Col>\r\n            <CardTitle tag=\"h5\">{props.title}</CardTitle>\r\n            <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\r\n              {props.subtitle}\r\n            </CardSubtitle>\r\n          </Col>\r\n          <Col className='d-flex' style={{justifyContent:'flex-end'}} xl={3} sm={12}>\r\n              {props.Button}\r\n          </Col>\r\n        </Row>\r\n        {props.loading ? <LottieComponent /> : <Table id=\"example\" className={`no-wrap mt-3 align-middle example ${props.additionalClasses}`} striped responsive borderless>\r\n          {props.children}\r\n        </Table>}\r\n        \r\n      </CardBody>\r\n    </Card>\r\n  </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default CommonTable;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Edit2 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\"\n  }));\n});\nEdit2.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nEdit2.displayName = 'Edit2';\nexport default Edit2;"],"sourceRoot":""}