{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","components/CreationModification.js","components/ComponentCard.js","views/detailTable/ChecklistDetails.js","constants/creationdatetime.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","title","style","fontSize","created_by","creation_date","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate","ContentDetails","useState","isoCode","setISOCode","loggedInuser","useContext","AppContext","navigate","useNavigate","questionDetails","setQuestionDetails","handleInputs","e","target","name","value","useEffect","api","get","then","res","data","md","onChange","iso_code_id","map","color","onClick","creationdatetime","first_name","post","insertedDataId","insertId","setTimeout","catch","moment","format"],"mappings":"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","file":"static/js/111.6ab35258.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n              <span style={{ fontSize: '0.7em' }}> Creation: {details && details.created_by} {details && details.creation_date}</span>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n              <span style={{ fontSize: '0.7em' }}> Modified: {details && details.modified_by} {details && details.modification_date}</span>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport AppContext from '../../context/AppContext';\r\n\r\nconst ContentDetails = () => {\r\n  //All const variables\r\n  //   const [category, setCategory] = useState();\r\n  const [isoCode, setISOCode] = useState();\r\n  const { loggedInuser } = useContext(AppContext);\r\n  const navigate = useNavigate();\r\n  const [questionDetails, setQuestionDetails] = useState([]);\r\n  //setting data in questionDetails\r\n  const handleInputs = (e) => {\r\n    setQuestionDetails({ ...questionDetails, [e.target.name]: e.target.value });\r\n  };\r\n \r\n  const getIsoCode = () => {\r\n    api.get('/checklist/getISO').then((res) => {\r\n      setISOCode(res.data.data);\r\n    });\r\n  };\r\n  //Insert Content Data\r\n  const insertChecklist = () => {\r\n    if (questionDetails.title !== '') {\r\n      questionDetails.creation_date = creationdatetime;\r\n      questionDetails.created_by = loggedInuser.first_name;\r\n      api\r\n        .post('/checklist/insertChecklist', questionDetails)\r\n        .then((res) => {\r\n          const insertedDataId = res.data.data.insertId;\r\n          message('ISO inserted successfully.', 'success');\r\n          setTimeout(() => {\r\n            navigate(`/ChecklistEdit/${insertedDataId}`);\r\n          }, 300);\r\n        })\r\n        .catch(() => {\r\n          message('Network connection error.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields.', 'error');\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // getCategory();\r\n    getIsoCode();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <BreadCrumbs />\r\n      <ToastContainer></ToastContainer>\r\n      <Row>\r\n        <Col md=\"6\">\r\n          <ComponentCard title=\"Question Details\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Label>Checklist Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={handleInputs}\r\n                      value={questionDetails && questionDetails.title}\r\n                      name=\"title\"\r\n                    ></Input>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Label>Select ISO</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      onChange={handleInputs}\r\n                      value={questionDetails && questionDetails.iso_code_id}\r\n                      name=\"iso_code_id\"\r\n                    >\r\n                      <option value=\"selected\">Please Select</option>\r\n                      {isoCode &&\r\n                        isoCode.map((e) => {\r\n                          return (\r\n                            <option key={e.iso_code_id} value={e.iso_code_id}>\r\n                              {' '}\r\n                              {e.title}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </Input>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\r\n                    <Button\r\n                      className=\"shadow-none\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        insertChecklist();\r\n                      }}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => {\r\n                        navigate(-1);\r\n                      }}\r\n                      type=\"button\"\r\n                      className=\"btn btn-dark shadow-none\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                </Row>\r\n              </FormGroup>\r\n            </Form>\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default ContentDetails;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n"],"sourceRoot":""}